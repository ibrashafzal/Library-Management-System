<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LMS</name>
    </assembly>
    <members>
        <member name="T:LMS.Controllers.BookController">
            <summary>
            Book APIs Endpoints for managing library books:
            </summary>
        </member>
        <member name="M:LMS.Controllers.BookController.Get">
            <summary>
            Get All Books.
            </summary>
            <response code="200">List of Books found </response>
            <response code="204">List of Books not found</response>
            <response code="404">API key not found</response>
            /// <remarks>
            This endpoint retrieves all book with their information.
            Example: GET /api/Book
            </remarks>
        </member>
        <member name="M:LMS.Controllers.BookController.BookbyId(System.Int32)">
            <summary>
            Get a required book by Id.
            </summary>
            <param name="id">The unique identifier of the book.</param>
            <response code="200">Book found</response>
            <response code ="404">Book not exist of that Id</response>
            <remarks>This endpoint of API provide a detail of a particular book.</remarks>
        </member>
        <member name="M:LMS.Controllers.BookController.Add(LMS.DTO.BookDTO)">
             <summary>
             Add a new book.
             </summary>
            <response code= "201">Book Added Successfully</response>
            <response code ="400">Bad Request</response>
             <response code="409">Book already exists</response>
             <remarks>This endpoint of API allow you to add a new book.
             </remarks>
        </member>
        <member name="M:LMS.Controllers.BookController.Update(System.Int32,LMS.DTO.BookDTO)">
            <summary>
            Update a Book.
            </summary>
            <param name="id">The unique identifier of the book to update.</param>
            <response code = "200"> Book Updated Succesfully</response>
            <response code = "404">Invalid Input </response>
            <remarks>This endpoint of API provide a facility to update some data of an existing book.</remarks>
        </member>
        <member name="M:LMS.Controllers.BookController.Delete(System.Int32)">
            <summary>
            Delete a book
            </summary>
            <param name="id">The unique identifier of the book to delete.</param>
            <response code = "204">Book deleted successfully</response>
            /// <response code="404">Book with the specified ID not found</response>
            <remarks>At this endpoint of API you can delete a particular book.</remarks>
        </member>
        <member name="M:LMS.Controllers.BookController.ExportBooksReport">
            <summary>
            Get all books in PDF with download links.
            </summary>
            <remarks>At this endpoint you get all books details in PDF.</remarks>
        </member>
        <member name="T:LMS.Controllers.IssueController">
            <summary>
            Issue APIs Endpoints for issuing and returning books:
            </summary>
        </member>
        <member name="M:LMS.Controllers.IssueController.IssueBook(LMS.DTO.IssueDTO)">
             <summary>Issue a new book to Student</summary>
              <response code="201">Book issued successfully.</response>
             <response code="400">Invalid request.</response>
             <remarks>
             This endpoint is used to issue a book to a student.
            It records the student, the book, the issue date, and the due date.
             </remarks>
        </member>
        <member name="M:LMS.Controllers.IssueController.GetAll">
            <summary>
            Retrieve all issued books.
            </summary>
            <reponse code = "200">List of issued books found</reponse>
            <response code ="204">list of issued books not found</response>
            <remarks>This endpoint returns a list of all issued books with details about the student, book, issue date, due date, and status.</remarks>
        </member>
        <member name="M:LMS.Controllers.IssueController.GetById(System.Int32)">
            <summary>
            Retrieve details of a specific issued book by issue ID.
            </summary>
            <param name="id">The Id of issued book</param>
            <response code="200">Issued book found</response>
            <reponse code ="204">This book is not issued</reponse>
            <remarks>This endpoint retrieves the details of a specific issued book record by its unique issueId.</remarks>
        </member>
        <member name="M:LMS.Controllers.IssueController.ExportBooksReport">
            <summary>
            Get all issued books in PDF with download link
            </summary>
            <remarks>This endpoint generates a PDF file containing all issued books with details like student, book, issue date, due date, and return status.</remarks>
        </member>
        <member name="T:LMS.Controllers.StudentController">
            <summary>
            Student API Endpoint for managing students:
            </summary>
        </member>
        <member name="M:LMS.Controllers.StudentController.Get">
            <summary>
            Retrieve All Students.
            </summary>
            <response code="200">List of Student found </response>
            <response code="204">List of Student not found</response>
            <remarks>This endpoint returns a list of all registered students in the system with their details.</remarks>
        </member>
        <member name="M:LMS.Controllers.StudentController.GetbyId(System.Int32)">
            <summary>
            Get a required student by Id.
            </summary>
            <param name="id">The unique identifier of the student.</param>
            <response code="200">Student found</response>
            <response code ="404">Student not exist of that Id</response>
            <remarks>This endpoint retrieves the full details of a single
            student using their unique studentId.</remarks>
        </member>
        <member name="M:LMS.Controllers.StudentController.Add(LMS.DTO.StudentDTO)">
             <summary>
             Add a new Student.
             </summary>
            <response code= "201">Student Added Successfully</response>
            <response code ="400">Bad Request</response>
             <response code="409">Student already exists</response>
             <remarks>
             This endpoint is used to register a new student in the system by providing their personal and contact details.
             </remarks>
        </member>
        <member name="M:LMS.Controllers.StudentController.Update(System.Int32,LMS.DTO.StudentDTO)">
            <summary>
            Update a Student.
            </summary>
            <param name="id">The unique identifier of the Student to update.</param>
            <response code = "200"> Student Updated Succesfully</response>
            <response code = "404">Invalid Input </response>
            <remarks>
            This endpoint updates the information of an existing student. You must provide a valid studentId in the path.
            </remarks>
        </member>
        <member name="M:LMS.Controllers.StudentController.Delete(System.Int32)">
             <summary>Delete a Student</summary>
             <param name="id">The unique identifier of the Student to delete.</param>
             <response code = "204">Student deleted successfully</response>
             <response code="404">Student with the specified ID not found</response>
             <remarks>
             This endpoint removes a student from the system using their unique studentId.
            </remarks>
        </member>
        <member name="M:LMS.Controllers.StudentController.ExportStudentReport">
            <summary>
            Get all Student in PDF with download links.
            </summary>
            <remarks>
            This endpoint generates and returns a PDF report of all registered students in the system.
            </remarks>
        </member>
        <member name="P:LMS.DTO.BookDTO.Tittle">
            <summary>Book title</summary>
            <example>C# in Depth</example>
        </member>
        <member name="P:LMS.DTO.BookDTO.Author">
            <summary>Author of the book</summary>
            <example>Jon Skeet</example>
        </member>
        <member name="P:LMS.DTO.BookDTO.Quantity">
            <summary>Number of copies available</summary>
            <example>10</example>
        </member>
        <member name="P:LMS.DTO.BookDTO.Category">
            <summary>Category of the book</summary>
            <example>Programming</example>
        </member>
        <member name="P:LMS.DTO.IssueDTO.StudentId">
            <summary>Student ID</summary>
            <example>01</example>
        </member>
        <member name="P:LMS.DTO.IssueDTO.BookId">
            <summary>Book ID</summary>
            <example>1</example>
        </member>
        <member name="P:LMS.DTO.IssueDTO.IssueQuantity">
            <summary>How many books you want to issue</summary>
            <example>5</example>
        </member>
        <member name="P:LMS.DTO.StudentDTO.Name">
            <summary>Name of Student </summary>
            <example>John</example>
        </member>
        <member name="P:LMS.DTO.StudentDTO.Email">
            <summary>Enail of Student </summary>
            <example>John@example.com</example>
        </member>
        <member name="P:LMS.DTO.StudentDTO.Class">
            <summary>Name of Student </summary>
            <example>A</example>
        </member>
        <member name="P:LMS.DTO.StudentDTO.Contact">
            <summary>Class of Student </summary>
            <example>3334-000323</example>
        </member>
    </members>
</doc>
